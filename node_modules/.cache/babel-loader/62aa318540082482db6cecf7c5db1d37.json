{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u041A\\\\Desktop\\\\Javascript\\\\React\\\\to-do-list\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport ToDoList from './TodoList';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo({\n  todos,\n  completeTodo,\n  removeTodo\n}) {\n  _s();\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const sumbitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  return todos.map((todo, index) => {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => completeTodo(todo.id),\n        children: todo.text\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icons\",\n        children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n          onClick: () => removeTodo(todo.id),\n          className: \"delete-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n          onClick: () => setEdit({\n            id: todo.id,\n            value: todo.next\n          }),\n          className: \"edit-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 14\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this);\n  });\n}\n\n_s(Todo, \"Lk+zX9mM8RlzHTP2VTuh+tHke4Q=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/ПК/Desktop/Javascript/React/to-do-list/src/components/Todo.js"],"names":["React","useState","TodoForm","ToDoList","RiCloseCircleLine","TiEdit","Todo","todos","completeTodo","removeTodo","edit","setEdit","id","value","sumbitUpdate","updateTodo","map","todo","index","isComplete","text","next"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,iBAAR,QAAgC,gBAAhC;AACA,SAAQC,MAAR,QAAqB,gBAArB;;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA,KAAD;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA;AAAtB,CAAd,EAAiD;AAAA;;AAC7C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC;AAC7BW,IAAAA,EAAE,EAAE,IADyB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAAD,CAAhC;;AAIA,QAAMC,YAAY,GAAGD,KAAK,IAAG;AACzBE,IAAAA,UAAU,CAACL,IAAI,CAACE,EAAN,EAAUC,KAAV,CAAV;AACAF,IAAAA,OAAO,CAAC;AACJC,MAAAA,EAAE,EAAC,IADC;AAEJC,MAAAA,KAAK,EAAE;AAFH,KAAD,CAAP;AAIH,GAND;;AAOA,SAAON,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAgB;AAC7B;AAAA;AACA,MAAA,SAAS,EAAID,IAAI,CAACE,UAAL,GAAiB,mBAAjB,GAAsC,UADnD;AAAA,8BAGK;AAAqB,QAAA,OAAO,EAAI,MAAMX,YAAY,CAACS,IAAI,CAACL,EAAN,CAAlD;AAAA,kBACKK,IAAI,CAACG;AADV,SAAYH,IAAI,CAACL,EAAjB;AAAA;AAAA;AAAA;AAAA,cAHL,eAMK;AAAK,QAAA,SAAS,EAAG,OAAjB;AAAA,gCACG,QAAC,iBAAD;AACI,UAAA,OAAO,EAAI,MAAIH,UAAU,CAACQ,IAAI,CAACL,EAAN,CAD7B;AAEI,UAAA,SAAS,EAAG;AAFhB;AAAA;AAAA;AAAA;AAAA,gBADH,eAKG,QAAC,MAAD;AACA,UAAA,OAAO,EAAI,MAAID,OAAO,CAAC;AAACC,YAAAA,EAAE,EAAEK,IAAI,CAACL,EAAV;AAAaC,YAAAA,KAAK,EAAEI,IAAI,CAACI;AAAzB,WAAD,CADtB;AAEA,UAAA,SAAS,EAAG;AAFZ;AAAA;AAAA;AAAA;AAAA,gBALH;AAAA;AAAA;AAAA;AAAA;AAAA,cANL;AAAA,OAEOH,KAFP;AAAA;AAAA;AAAA;AAAA;AAiBH,GAlBM,CAAP;AAmBH;;GA/BQZ,I;;KAAAA,I;AAiCT,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm';\r\nimport ToDoList from './TodoList';\r\nimport {RiCloseCircleLine} from 'react-icons/ri';\r\nimport {TiEdit} from 'react-icons/ti';\r\n\r\nfunction Todo({todos, completeTodo, removeTodo}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    })\r\n    const sumbitUpdate = value =>{\r\n        updateTodo(edit.id, value);\r\n        setEdit({\r\n            id:null,\r\n            value: ''\r\n        })\r\n    }\r\n    return todos.map((todo, index) =>{\r\n        <div \r\n        className = {todo.isComplete? 'todo-row complete' :'todo-row'} \r\n        key = {index}>\r\n             <div key = {todo.id} onClick = {() => completeTodo(todo.id)}>\r\n                 {todo.text}\r\n             </div>\r\n             <div className = \"icons\"> \r\n                <RiCloseCircleLine \r\n                    onClick = {()=>removeTodo(todo.id)}\r\n                    className = \"delete-icon\"\r\n                />\r\n                <TiEdit \r\n                onClick = {()=>setEdit({id: todo.id,value: todo.next})}\r\n                className = \"edit-icon\"\r\n                />\r\n             </div>\r\n        </div>\r\n    })\r\n}\r\n\r\nexport default Todo\r\n"]},"metadata":{},"sourceType":"module"}