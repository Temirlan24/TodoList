{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u041A\\\\Desktop\\\\Javascript\\\\React\\\\to-do-list\\\\src\\\\components\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props) {\n  _s();\n\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a todo\",\n      value: input,\n      name: \"text\",\n      className: \"todo-input\",\n      onChange: handleChange,\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todo-button\",\n      children: \"Add todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoForm, \"uJpZNSL5bW357TfjbvOPk3BX514=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["C:/Users/ПК/Desktop/Javascript/React/to-do-list/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","TodoForm","props","input","setInput","edit","value","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,KAAK,CAACG,IAAN,GAAYH,KAAK,CAACG,IAAN,CAAWC,KAAvB,GAA+B,EAAhC,CAAlC;AAEA,QAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;AACAD,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACH,GAFQ,CAAT;;AAGA,QAAMC,YAAY,GAAGC,CAAC,IAAG;AACrBP,IAAAA,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASN,KAAV,CAAR;AACH,GAFD;;AAGA,QAAMO,YAAY,GAAGF,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACG,cAAF;AACAZ,IAAAA,KAAK,CAACa,QAAN,CAAe;AACVC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,KAAzB,CADM;AAEVC,MAAAA,IAAI,EAAEjB;AAFI,KAAf;AAIAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAPD;;AAQA,sBACI;AAAM,IAAA,SAAS,EAAG,WAAlB;AAA8B,IAAA,QAAQ,EAAIS,YAA1C;AAAA,4BACI;AACI,MAAA,IAAI,EAAG,MADX;AAEI,MAAA,WAAW,EAAG,YAFlB;AAGI,MAAA,KAAK,EAAIV,KAHb;AAII,MAAA,IAAI,EAAG,MAJX;AAKI,MAAA,SAAS,EAAG,YALhB;AAMI,MAAA,QAAQ,EAAIO,YANhB;AAOI,MAAA,GAAG,EAAIH;AAPX;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI;AAAQ,MAAA,SAAS,EAAG,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAhCQN,Q;;KAAAA,Q;AAkCT,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit? props.edit.value : '');\r\n\r\n    const inputRef = useRef(null);\r\n    useEffect(()=>{\r\n        inputRef.current.focus()\r\n    })\r\n    const handleChange = e =>{\r\n        setInput(e.target.value);\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        props.onSubmit({\r\n             id: Math.floor(Math.random()*10000),\r\n             text: input\r\n        });\r\n        setInput('');\r\n    };\r\n    return (\r\n        <form className = \"todo-form\" onSubmit = {handleSubmit}>\r\n            <input \r\n                type = \"text\" \r\n                placeholder = \"Add a todo\" \r\n                value = {input}\r\n                name = \"text\"\r\n                className = \"todo-input\"\r\n                onChange = {handleChange}\r\n                ref = {inputRef}\r\n            />\r\n            <button className = \"todo-button\">Add todo</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n"]},"metadata":{},"sourceType":"module"}